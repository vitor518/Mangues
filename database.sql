-- ====================================================================================
--              SCRIPT COMPLETO DO BANCO DE DADOS - PROJETO MANGUES (CORRIGIDO)
-- ====================================================================================
-- Vers√£o: 2.3
-- Data: 2025-10-17
-- Corre√ß√£o: Substitui√ß√£o de 'email' por 'apelido' e ajustes nas restri√ß√µes UNIQUE
-- ====================================================================================

-- ============================================
-- 0. LIMPAR BANCO DE DADOS (DROP TABLES)
-- ============================================
-- ATEN√á√ÉO: Isso vai apagar TODOS os dados! Use com cuidado!

-- Remover views primeiro
DROP VIEW IF EXISTS v_especies_completas CASCADE;
DROP VIEW IF EXISTS v_estatisticas_usuarios CASCADE;

-- Remover triggers e fun√ß√µes
DROP TRIGGER IF EXISTS trigger_especies_timestamp ON especies;
DROP FUNCTION IF EXISTS atualizar_timestamp() CASCADE;

-- Remover tabelas dependentes primeiro (que t√™m foreign keys)
DROP TABLE IF EXISTS acoes_ameacas CASCADE;
DROP TABLE IF EXISTS ameacas_visualizadas CASCADE;
DROP TABLE IF EXISTS especies_visualizadas CASCADE;
DROP TABLE IF EXISTS estatisticas_jogos CASCADE;
DROP TABLE IF EXISTS usuario_conquistas CASCADE;
DROP TABLE IF EXISTS contatos CASCADE;
DROP TABLE IF EXISTS adaptacoes CASCADE;

-- Remover tabelas principais
DROP TABLE IF EXISTS ameacas CASCADE;
DROP TABLE IF EXISTS conquistas CASCADE;
DROP TABLE IF EXISTS especies CASCADE;
DROP TABLE IF EXISTS usuarios CASCADE;

-- ============================================
-- 1. TABELAS PRINCIPAIS
-- ============================================

-- Tabela de usu√°rios (CORRIGIDA: email substitu√≠do por apelido)
CREATE TABLE IF NOT EXISTS usuarios (
    id SERIAL PRIMARY KEY,
    nome VARCHAR(100) NOT NULL,
    apelido VARCHAR(100) UNIQUE NOT NULL, -- CORRE√á√ÉO APLICADA AQUI
    senha VARCHAR(255) NOT NULL, -- Renomeado de senha_hash para senha
    avatar VARCHAR(10) DEFAULT 'ü¶Ä',
    data_criacao TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    ultimo_acesso TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    total_pontos INTEGER DEFAULT 0,
    visitas INTEGER DEFAULT 1,
    ativo BOOLEAN DEFAULT TRUE
);

COMMENT ON TABLE usuarios IS 'Tabela de usu√°rios do sistema, com pontua√ß√£o e visitas.';
COMMENT ON COLUMN usuarios.senha IS 'Senha do usu√°rio (deve ser criptografada na aplica√ß√£o).';

-- Tabela de esp√©cies (CORRIGIDA: nome agora √© UNIQUE para permitir ON CONFLICT)
CREATE TABLE IF NOT EXISTS especies (
    id SERIAL PRIMARY KEY,
    nome VARCHAR(255) NOT NULL UNIQUE,
    descricao TEXT NOT NULL,
    habitat TEXT NOT NULL,
    imagem VARCHAR(10) NOT NULL,
    criado_em TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    atualizado_em TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

COMMENT ON TABLE especies IS 'Esp√©cies de animais e plantas do mangue.';

-- Tabela de adapta√ß√µes das esp√©cies (CORRIGIDA: adicionado UNIQUE(especie_id, adaptacao))
CREATE TABLE IF NOT EXISTS adaptacoes (
    id SERIAL PRIMARY KEY,
    especie_id INTEGER REFERENCES especies(id) ON DELETE CASCADE,
    adaptacao TEXT NOT NULL,
    criado_em TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UNIQUE (especie_id, adaptacao)
);

COMMENT ON TABLE adaptacoes IS 'Adapta√ß√µes especiais de cada esp√©cie.';

-- Tabela de amea√ßas ao ecossistema
CREATE TABLE IF NOT EXISTS ameacas (
    id SERIAL PRIMARY KEY,
    titulo VARCHAR(100) NOT NULL UNIQUE,
    descricao TEXT NOT NULL,
    impacto VARCHAR(255) NOT NULL,
    emoji VARCHAR(10) NOT NULL,
    criado_em TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

COMMENT ON TABLE ameacas IS 'Lista de amea√ßas ao ecossistema do mangue.';

-- Tabela de contatos (CORRIGIDA: campo email mantido aqui pois faz sentido)
CREATE TABLE IF NOT EXISTS contatos (
    id SERIAL PRIMARY KEY,
    usuario_id INTEGER REFERENCES usuarios(id) ON DELETE SET NULL,
    nome VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL,
    assunto VARCHAR(255) NOT NULL,
    mensagem TEXT NOT NULL,
    lido BOOLEAN DEFAULT FALSE,
    respondido BOOLEAN DEFAULT FALSE,
    criado_em TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

COMMENT ON TABLE contatos IS 'Mensagens enviadas pelo formul√°rio de contato.';

-- ============================================
-- 2. TABELAS DE GAMIFICA√á√ÉO
-- ============================================

-- Tabela de conquistas dispon√≠veis no sistema
CREATE TABLE IF NOT EXISTS conquistas (
    id VARCHAR(50) PRIMARY KEY,
    nome VARCHAR(100) NOT NULL,
    descricao TEXT NOT NULL,
    emoji VARCHAR(10) NOT NULL,
    pontos INTEGER NOT NULL
);

COMMENT ON TABLE conquistas IS 'Cat√°logo de todas as conquistas poss√≠veis no sistema.';

-- Tabela de conquistas desbloqueadas pelos usu√°rios
CREATE TABLE IF NOT EXISTS usuario_conquistas (
    id SERIAL PRIMARY KEY,
    usuario_id INTEGER REFERENCES usuarios(id) ON DELETE CASCADE,
    conquista_id VARCHAR(50) REFERENCES conquistas(id),
    data_conquista TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UNIQUE(usuario_id, conquista_id)
);

COMMENT ON TABLE usuario_conquistas IS 'Associa os usu√°rios √†s conquistas que eles desbloquearam.';

-- Tabela de estat√≠sticas de jogos
CREATE TABLE IF NOT EXISTS estatisticas_jogos (
    id SERIAL PRIMARY KEY,
    usuario_id INTEGER REFERENCES usuarios(id) ON DELETE CASCADE,
    tipo_jogo VARCHAR(20) NOT NULL, -- 'memoria', 'conexoes', etc.
    dificuldade VARCHAR(20), -- 'facil', 'medio', 'dificil'
    pontuacao INTEGER NOT NULL,
    data_jogo TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    completado BOOLEAN DEFAULT TRUE
);

COMMENT ON TABLE estatisticas_jogos IS 'Registra cada partida que um usu√°rio joga.';

-- Tabela de esp√©cies que o usu√°rio j√° visualizou
CREATE TABLE IF NOT EXISTS especies_visualizadas (
    id SERIAL PRIMARY KEY,
    usuario_id INTEGER REFERENCES usuarios(id) ON DELETE CASCADE,
    especie_id INTEGER REFERENCES especies(id) ON DELETE CASCADE,
    data_visualizacao TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UNIQUE(usuario_id, especie_id)
);

COMMENT ON TABLE especies_visualizadas IS 'Di√°rio de bordo das esp√©cies que o usu√°rio encontrou.';

-- Tabela de amea√ßas que o usu√°rio j√° visualizou
CREATE TABLE IF NOT EXISTS ameacas_visualizadas (
    id SERIAL PRIMARY KEY,
    usuario_id INTEGER REFERENCES usuarios(id) ON DELETE CASCADE,
    ameaca_id INTEGER REFERENCES ameacas(id) ON DELETE CASCADE,
    data_visualizacao TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UNIQUE(usuario_id, ameaca_id)
);

COMMENT ON TABLE ameacas_visualizadas IS 'Registra as amea√ßas que o usu√°rio j√° aprendeu.';

-- Tabela de a√ß√µes contra amea√ßas que o usu√°rio completou
CREATE TABLE IF NOT EXISTS acoes_ameacas (
    id SERIAL PRIMARY KEY,
    usuario_id INTEGER REFERENCES usuarios(id) ON DELETE CASCADE,
    ameaca_id INTEGER REFERENCES ameacas(id) ON DELETE CASCADE,
    acao_index INTEGER NOT NULL,
    data_conclusao TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UNIQUE(usuario_id, ameaca_id, acao_index)
);

COMMENT ON TABLE acoes_ameacas IS 'Registra as a√ß√µes de mitiga√ß√£o de amea√ßas completadas pelo usu√°rio.';

-- ============================================
-- 3. √çNDICES PARA PERFORMANCE
-- ============================================
CREATE INDEX IF NOT EXISTS idx_usuarios_apelido ON usuarios(apelido); -- CORRE√á√ÉO APLICADA
CREATE INDEX IF NOT EXISTS idx_usuarios_pontos ON usuarios(total_pontos DESC);
CREATE INDEX IF NOT EXISTS idx_especies_nome ON especies(nome);
CREATE INDEX IF NOT EXISTS idx_adaptacoes_especie ON adaptacoes(especie_id);
CREATE INDEX IF NOT EXISTS idx_contatos_usuario ON contatos(usuario_id);
CREATE INDEX IF NOT EXISTS idx_stats_jogos_usuario ON estatisticas_jogos(usuario_id);
CREATE INDEX IF NOT EXISTS idx_user_conquistas ON usuario_conquistas(usuario_id, conquista_id);
CREATE INDEX IF NOT EXISTS idx_ameacas_titulo ON ameacas(titulo);

-- ============================================
-- 4. DADOS INICIAIS (SEMENTE)
-- ============================================

-- Inserir esp√©cies de exemplo (usa ON CONFLICT (nome))
INSERT INTO especies (nome, descricao, habitat, imagem) VALUES
('Caranguejo-U√ß√°', 'O caranguejo-u√ß√° √© o rei dos mangues! Ele tem uma carapa√ßa dura e garras fortes. Durante a lua cheia, fazem a "andada" para encontrar parceiros. S√£o engenheiros do mangue, cavando t√∫neis que ajudam a circular ar e √°gua.', 'Vive em tocas no solo lamacento do mangue', 'ü¶Ä'),
('Gar√ßa-Branca', 'Uma ave elegante com penas branquinhas. √â uma pescadora expert, ficando super quieta e sendo r√°pida como um ninja para pegar peixes.', 'Encontrada nas margens e √°reas rasas dos mangues', 'ü¶Ü'),
('Mangue-Vermelho', 'Uma √°rvore especial com ra√≠zes que parecem pernas de aranha, segurando-a firme no solo. Funciona como um filtro natural, limpando a √°gua.', 'Cresce diretamente na √°gua salgada, nas bordas dos mangues', 'üå≥'),
('Guaiamum', 'Primo forte do caranguejo-u√ß√°, com garras poderosas. Adora subir em √°rvores e √© importante para espalhar sementes.', 'Vive tanto no solo quanto nas √°rvores do mangue', 'ü¶û'),
('Tainha', 'Peixe prateado que nada em grupos e adora pular fora da √°gua. Alimenta muitos outros animais do mangue.', 'Nada nas √°guas do mangue, perto da superf√≠cie', 'üêü'),
('Mangue-Branco', 'Com folhas mais claras, vive um pouco mais longe da √°gua. Suas ra√≠zes especiais ajudam a planta a respirar.', 'Cresce em √°reas mais secas do mangue', 'üåø')
ON CONFLICT (nome) DO NOTHING;

-- Inserir adapta√ß√µes das esp√©cies (usa ON CONFLICT DO NOTHING)
INSERT INTO adaptacoes (especie_id, adaptacao) VALUES
((SELECT id FROM especies WHERE nome = 'Caranguejo-U√ß√°'), 'Br√¢nquias modificadas para respirar fora da √°gua'),
((SELECT id FROM especies WHERE nome = 'Caranguejo-U√ß√°'), 'Garras fortes para cavar buracos profundos'),
((SELECT id FROM especies WHERE nome = 'Caranguejo-U√ß√°'), 'Carapa√ßa resistente contra predadores'),
((SELECT id FROM especies WHERE nome = 'Gar√ßa-Branca'), 'Bico longo e pontiagudo para pescar'),
((SELECT id FROM especies WHERE nome = 'Gar√ßa-Branca'), 'Pernas longas para andar na √°gua rasa'),
((SELECT id FROM especies WHERE nome = 'Gar√ßa-Branca'), 'Vis√£o agu√ßada para detectar peixes'),
((SELECT id FROM especies WHERE nome = 'Mangue-Vermelho'), 'Ra√≠zes a√©reas para sustenta√ß√£o no solo mole'),
((SELECT id FROM especies WHERE nome = 'Mangue-Vermelho'), 'Folhas especiais que eliminam excesso de sal'),
((SELECT id FROM especies WHERE nome = 'Mangue-Vermelho'), 'Sementes que germinam ainda na √°rvore'),
((SELECT id FROM especies WHERE nome = 'Guaiamum'), 'Garras extremamente fortes'),
((SELECT id FROM especies WHERE nome = 'Guaiamum'), 'Habilidade de subir em √°rvores'),
((SELECT id FROM especies WHERE nome = 'Guaiamum'), 'Respira√ß√£o adaptada para terra e √°gua'),
((SELECT id FROM especies WHERE nome = 'Tainha'), 'Capacidade de pular fora da √°gua'),
((SELECT id FROM especies WHERE nome = 'Tainha'), 'Nadadeiras potentes para nadar r√°pido'),
((SELECT id FROM especies WHERE nome = 'Tainha'), 'Sistema de navega√ß√£o em grupo'),
((SELECT id FROM especies WHERE nome = 'Mangue-Branco'), 'Ra√≠zes respirat√≥rias (pneumat√≥foros)'),
((SELECT id FROM especies WHERE nome = 'Mangue-Branco'), 'Toler√¢ncia a diferentes n√≠veis de sal'),
((SELECT id FROM especies WHERE nome = 'Mangue-Branco'), 'Folhas que refletem luz solar excessiva')
ON CONFLICT DO NOTHING;

-- Inserir amea√ßas padr√£o
INSERT INTO ameacas (titulo, descricao, impacto, emoji) VALUES
('Polui√ß√£o por Pl√°stico', 'Res√≠duos pl√°sticos sufocam e prendem a fauna, al√©m de liberar micropl√°sticos na cadeia alimentar.', 'Morte de fauna, contamina√ß√£o da cadeia alimentar.', 'üóëÔ∏è'),
('Desmatamento', 'Corte de √°rvores do mangue para constru√ß√£o ou agricultura, removendo o ber√ß√°rio da vida marinha.', 'Perda de habitat, eros√£o do solo, redu√ß√£o da biodiversidade.', 'üî™'),
('Vazamento de √ìleo', 'Derramamento de petr√≥leo ou √≥leo que cobre as ra√≠zes e os animais, impedindo a respira√ß√£o.', 'Asfixia da flora e fauna, destrui√ß√£o imediata do ecossistema.', 'üõ¢Ô∏è')
ON CONFLICT (titulo) DO NOTHING;

-- Inserir conquistas padr√£o do sistema
INSERT INTO conquistas (id, nome, descricao, emoji, pontos) VALUES
('primeira_especie', 'Explorador Iniciante', 'Visualizou sua primeira esp√©cie', 'üîç', 10),
('memoria_facil', 'Mem√≥ria Afiada', 'Completou o jogo da mem√≥ria f√°cil', 'üß†', 50),
('memoria_medio', 'Mestre da Mem√≥ria', 'Completou o jogo da mem√≥ria m√©dio', 'üéØ', 100),
('memoria_dificil', 'Campe√£o da Mem√≥ria', 'Completou o jogo da mem√≥ria dif√≠cil', 'üëë', 200),
('conexoes_completas', 'Conector Expert', 'Acertou todas as conex√µes perfeitamente', '‚ö°', 75),
('todas_especies', 'Bi√≥logo J√∫nior', 'Visualizou todas as esp√©cies', 'üåø', 150),
('todas_ameacas', 'Guardi√£o do Mangue', 'Conheceu todas as amea√ßas', 'üõ°Ô∏è', 100),
('visitante_frequente', 'Explorador Dedicado', 'Visitou o site 10 vezes', 'üåü', 50),
('jogo_perfeito', 'Perfei√ß√£o Total', 'Completou um jogo com pontua√ß√£o m√°xima', 'üíé', 300),
('maratonista', 'Maratonista dos Jogos', 'Completou 20 jogos', 'üèÉ', 250)
ON CONFLICT (id) DO UPDATE SET
    nome = EXCLUDED.nome,
    descricao = EXCLUDED.descricao,
    emoji = EXCLUDED.emoji,
    pontos = EXCLUDED.pontos;

-- Criar usu√°rio de teste para desenvolvimento (CORRIGIDO: usando apelido)
INSERT INTO usuarios (nome, apelido, senha) VALUES
('Usu√°rio Teste', 'teste', 'teste123')
ON CONFLICT (apelido) DO NOTHING;

-- ============================================
-- 5. FUN√á√ïES E TRIGGERS
-- ============================================

-- Fun√ß√£o para atualizar o campo 'atualizado_em' automaticamente
CREATE OR REPLACE FUNCTION atualizar_timestamp()
RETURNS TRIGGER AS $$
BEGIN
    NEW.atualizado_em = CURRENT_TIMESTAMP;
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

-- Trigger para a tabela 'especies'
DROP TRIGGER IF EXISTS trigger_especies_timestamp ON especies;
CREATE TRIGGER trigger_especies_timestamp
BEFORE UPDATE ON especies
FOR EACH ROW
EXECUTE FUNCTION atualizar_timestamp();

-- ============================================
-- 6. VIEWS (VISUALIZA√á√ïES √öTEIS)
-- ============================================

-- View para listar esp√©cies com suas adapta√ß√µes
CREATE OR REPLACE VIEW v_especies_completas AS
SELECT
    e.id,
    e.nome,
    e.descricao,
    e.habitat,
    e.imagem,
    array_agg(a.adaptacao ORDER BY a.id) as adaptacoes
FROM especies e
LEFT JOIN adaptacoes a ON e.id = a.especie_id
GROUP BY e.id
ORDER BY e.nome;

-- View para estat√≠sticas gerais de usu√°rios
CREATE OR REPLACE VIEW v_estatisticas_usuarios AS
SELECT
    COUNT(*) as total_usuarios,
    COUNT(*) FILTER (WHERE ativo = true) as usuarios_ativos,
    COUNT(*) FILTER (WHERE ultimo_acesso > NOW() - INTERVAL '30 days') as usuarios_ativos_mes,
    SUM(total_pontos) as soma_total_pontos,
    AVG(total_pontos) as media_pontos_por_usuario
FROM usuarios;

-- ============================================
-- FIM DO SCRIPT
-- ============================================
DO $$
BEGIN
    RAISE NOTICE '‚úÖ Script do banco de dados (v2.3) executado com sucesso!';
    RAISE NOTICE 'üîß Campo EMAIL substitu√≠do por APELIDO na tabela usuarios.';
    RAISE NOTICE 'üë§ Usu√°rio de teste criado -> Apelido: teste | Senha: teste123';
    RAISE NOTICE 'üöÄ O sistema est√° pronto para funcionar com apelidos!';
END $$;